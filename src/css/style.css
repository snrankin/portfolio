/**
 * This injects Tailwind's base styles and any base styles registered by
 * plugins.
 */
@tailwind base;

/**
 * This injects Tailwind's component classes and any component classes
 * registered by plugins.
 */
@tailwind components;

/**
 * This injects Tailwind's utility classes and any utility classes registered
 * by plugins.
 */
@tailwind utilities;

:root {
	--p: 70.38% 0.123 182.5;
	--container-width: 90vw;
	--page-gutter: calc((100vw - var(--container-width)) * 0.5);
	--section-spacing: clamp(3rem, 1.6059rem + 7.4349vw, 8rem);
	--shadow-color: 220deg 5% 52%;
	--shadow-color: 210deg 12% 60%;
	--logo-color-1: theme(colors.primary.500);
	--logo-color-2: theme(colors.slate.700);
	--fallback-p: theme(colors.primary.500);
	--fallback-pc: theme(colors.primaryContent.light);
	--fallback-s: theme(colors.secondary.500);
	--fallback-sc: theme(colors.secondaryContent.light);
	--fallback-a: theme(colors.accent.500);
	--fallback-ac: theme(colors.accentContent.light);
	--fallback-n: theme(colors.slate.800);
	--fallback-nc: theme(colors.slate.300);
	--fallback-b1: theme(colors.slate.100);
	--fallback-b2: theme(colors.slate.200);
	--fallback-b3: theme(colors.slate.300);
	--fallback-bc: theme(colors.slate.700);
	--fallback-in: theme(colors.info.500);
	--fallback-inc: theme(colors.infoContent.light);
	--fallback-su: theme(colors.success.500);
	--fallback-suc: theme(colors.successContent.light);
	--fallback-wa: theme(colors.warning.500);
	--fallback-wac: theme(colors.warningContent.light);
	--fallback-er: theme(colors.error.500);
	--fallback-erc: theme(colors.errorContent.light);
	--pattern-bg: svg-load(subtle-bg-light.svg);
	--menu-active-bg: var(--fallback-p);
	--menu-active-color: var(--fallback-pc);
	@media screen(lg) {
		--container-width: 85vw;
	}
	@media screen(xl) {
		--container-width: 1170px;
	}
}

@media (prefers-color-scheme: dark) {
	[data-theme='light'] {
		--shadow-color: 220deg 5% 52%;
		--shadow-color: 210deg 12% 60%;
		--logo-color-1: theme(colors.primary.500);
		--logo-color-2: theme(colors.slate.700);
		--fallback-p: theme(colors.primary.500);
		--fallback-pc: theme(colors.primaryContent.light);
		--fallback-s: theme(colors.secondary.500);
		--fallback-sc: theme(colors.secondaryContent.light);
		--fallback-a: theme(colors.accent.500);
		--fallback-ac: theme(colors.accentContent.light);
		--fallback-n: theme(colors.slate.800);
		--fallback-nc: theme(colors.slate.300);
		--fallback-b1: theme(colors.slate.100);
		--fallback-b2: theme(colors.slate.200);
		--fallback-b3: theme(colors.slate.300);
		--fallback-bc: theme(colors.slate.700);
		--fallback-in: theme(colors.info.500);
		--fallback-inc: theme(colors.infoContent.light);
		--fallback-su: theme(colors.success.500);
		--fallback-suc: theme(colors.successContent.light);
		--fallback-wa: theme(colors.warning.500);
		--fallback-wac: theme(colors.warningContent.light);
		--fallback-er: theme(colors.error.500);
		--fallback-erc: theme(colors.errorContent.light);
		--pattern-bg: svg-load(subtle-bg-light.svg);
	}
}

.bg-base-200 {
	--shadow-color: 213deg 13% 58%;
}
.pattern-bg {
	--shadow-color: 216deg 12% 54%;
}
html .prose {
	--tw-prose-body: theme(colors.slate.700);
	--tw-prose-headings: theme(colors.slate.900);
	--tw-prose-lead: theme(colors.slate.800);
	--tw-prose-links: theme(colors.primary.600);
	--tw-prose-bold: theme(colors.primary.500);
	--tw-prose-counters: theme(colors.primary.600);
	--tw-prose-bullets: theme(colors.secondary.500);
	--tw-prose-hr: theme(colors.slate.300);
	--tw-prose-quotes: theme(colors.primary.700);
	--tw-prose-quote-borders: theme(colors.secondary.500);
	--tw-prose-captions: theme(colors.slate.700);
	--tw-prose-code: theme(colors.primary.400);
	--tw-prose-pre-code: theme(colors.slate.100);
	--tw-prose-pre-bg: theme(colors.slate.800);
	--tw-prose-th-borders: theme(colors.slate.300);
	--tw-prose-td-borders: theme(colors.slate.200);
}

[data-theme='dark'] {
	--shadow-color: 216deg 34% 13%;
	--logo-color-1: theme(colors.primary.600);
	--logo-color-2: theme(colors.slate.300);
	--fallback-p: theme(colors.primary.600);
	--fallback-pc: theme(colors.primaryContent.dark);
	--fallback-s: theme(colors.secondary.600);
	--fallback-sc: theme(colors.secondaryContent.dark);
	--fallback-a: theme(colors.accent.600);
	--fallback-ac: theme(colors.accentContent.dark);
	--fallback-n: theme(colors.slate.300);
	--fallback-nc: theme(colors.slate.900);
	--fallback-b1: theme(colors.slate.700);
	--fallback-b2: theme(colors.slate.800);
	--fallback-b3: theme(colors.slate.900);
	--fallback-bc: theme(colors.slate.300);
	--fallback-in: theme(colors.info.600);
	--fallback-inc: theme(colors.infoContent.dark);
	--fallback-su: theme(colors.success.600);
	--fallback-suc: theme(colors.successContent.dark);
	--fallback-wa: theme(colors.warning.600);
	--fallback-wac: theme(colors.warningContent.dark);
	--fallback-er: theme(colors.error.600);
	--fallback-erc: theme(colors.errorContent.dark);
	--pattern-bg: svg-load(subtle-bg-dark.svg);
	.bg-base-200 {
		--shadow-color: 218deg 49% 7%;
	}
	.pattern-bg {
		--shadow-color: 222deg 54% 6%;
	}
	.prose {
		--tw-prose-body: theme(colors.slate.200);
		--tw-prose-headings: theme(colors.slate.100);
		--tw-prose-lead: theme(colors.slate.300);
		--tw-prose-links: theme(colors.primary.400);
		--tw-prose-bold: theme(colors.white);
		--tw-prose-counters: theme(colors.primary.400);
		--tw-prose-bullets: theme(colors.secondary.600);
		--tw-prose-hr: theme(colors.slate.700);
		--tw-prose-quotes: theme(colors.primary.100);
		--tw-prose-quote-borders: theme(colors.primary.600);
		--tw-prose-captions: theme(colors.slate.400);
		--tw-prose-code: theme(colors.white);
		--tw-prose-pre-code: theme(colors.slate.300);
		--tw-prose-pre-bg: theme(colors.slate.950);
		--tw-prose-th-borders: theme(colors.slate.600);
		--tw-prose-td-borders: theme(colors.slate.700);
	}
}

@each $util, $prop in (text, fill, stroke, border, divide),
	(color, fill, stroke, border-color, border-color)
{
	@each $color,
		$var in (primary, secondary, accent, info, warning, success, error),
		(p, s, a, in, wa, su, er)
	{
		.$(util)-$(color) {
			$(prop): var(--fallback-$(var));
		}
	}
}

@each $color,
	$var in (primary, secondary, accent, info, warning, success, error),
	(p, s, a, in, wa, su, er)
{
	.bg-$(color) {
		background-color: var(--fallback-$(var));
		/* prettier-ignore */
		color: var(--fallback-$(var)c);
	}
}

.modal-box {
	position: relative;
	.calendly {
		position: relative;
		iframe {
			position: absolute;
		}
	}
}

@layer base {
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}
	h1 {
		@apply font-display;
	}
	h2 {
		@apply font-display;
	}
	h3 {
		@apply font-display;
	}
	h4 {
		@apply font-display;
	}

	.container {
		max-width: var(--container-width);
	}
}

@layer components {
	@media (screen(lg)) {
		.lg\:dropdown-hover.dropdown:hover {
			.dropdown-content {
				visibility: hidden !important;
				opacity: 0 !important;
				--tw-scale-x: 0.95 !important;
				--tw-scale-y: 0.95 !important;
			}
			> .dropdown-content {
				visibility: visible !important;
				opacity: 1 !important;
				--tw-scale-x: 1 !important;
				--tw-scale-y: 1 !important;
			}
		}
	}
	.mockup-code {
		padding-top: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);
		padding-bottom: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);

		pre {
			padding-right: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);
			line-height: 1;
			&[data-prefix]:before {
				width: 1ch;
				margin-left: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);
				margin-right: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);
			}
		}

		.buttons {
			padding-left: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);
			padding-bottom: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);
		}
	}

	.pattern-bg {
		background-image: var(--pattern-bg);
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
	}

	.card-normal {
		.card-body {
			padding: clamp(0.9375rem, 0.7481rem + 0.947vw, 1.5625rem);
		}
	}
	.prose
		:where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
		background-color: var(--tw-prose-pre-bg);
	}

	.btn {
		min-height: auto;
		height: auto;
		@apply p-3;
	}
	.btm-nav {
		box-shadow: 0px -0.5px 0.6px hsl(var(--shadow-color) / 0.36),
			0px -0.8px 0.9px -1.1px hsl(var(--shadow-color) / 0.38),
			0px -2.1px 2.4px -2.2px hsl(var(--shadow-color) / 0.41);
	}

	@media screen(lg) {
		.btm-nav {
			box-shadow: none;
		}
	}

	.menu {
		.active {
			background-color: var(--menu-active-bg);
			color: var(--menu-active-color);
		}
	}
	:where(
			.menu
				li:not(.menu-title):not(.disabled)
				> *:not(ul):not(details):not(.menu-title)
		):not(.active):hover,
	:where(
			.menu
				li:not(.menu-title):not(.disabled)
				> details
				> summary:not(.menu-title)
		):not(.active):hover {
		background-color: var(--menu-active-bg);
		color: var(--menu-active-color);
	}

	@media (max-width: 767.98px) {
		.dropdown:is(:not(details)) .menu.dropdown-content {
			--tw-scale-x: 1 !important;
			--tw-scale-y: 1 !important;
			visibility: visible !important;
			opacity: 1 !important;
			position: relative;
		}
		.dropdown {
			label .icon-wrapper {
				display: none;
			}
		}
	}
	.dropdown:not(.dropdown-open):focus .dropdown-content,
	.dropdown:not(.dropdown-open):focus-within .dropdown-content {
		--tw-scale-x: 0.95;
		--tw-scale-y: 0.95;
		opacity: 0;
		visibility: hidden;
	}
}

:where(
		.menu
			li:not(.menu-title):not(.disabled)
			> *:not(ul):not(details):not(.menu-title)
	):not(summary):not(.active).focus,
:where(
		.menu
			li:not(.menu-title):not(.disabled)
			> *:not(ul):not(details):not(.menu-title)
	):not(summary):not(.active):focus,
:where(
		.menu
			li:not(.menu-title):not(.disabled)
			> *:not(ul):not(details):not(.menu-title)
	):is(summary):not(.active):focus-visible,
:where(
		.menu
			li:not(.menu-title):not(.disabled)
			> details
			> summary:not(.menu-title)
	):not(summary):not(.active).focus,
:where(
		.menu
			li:not(.menu-title):not(.disabled)
			> details
			> summary:not(.menu-title)
	):not(summary):not(.active):focus,
:where(
		.menu
			li:not(.menu-title):not(.disabled)
			> details
			> summary:not(.menu-title)
	):is(summary):not(.active):focus-visible {
	background-color: var(--menu-active-bg);
	color: var(--menu-active-color);
}
.feather {
	width: 1em;
	height: 1em;
	stroke: currentColor;
	stroke-width: 2;
	stroke-linecap: round;
	stroke-linejoin: round;
	fill: none;
}
.menu .active {
	border-radius: var(--rounded-btn, 0.5rem);
}

.logo-color-1 {
	fill: var(--logo-color-1);
}
.logo-color-2 {
	fill: var(--logo-color-2);
}

[data-nimg='fill'] {
	object-fit: cover;
	font-family: 'object-fit: cover;';
}

.timeline li:last-child .prose {
	padding-bottom: 0 !important;
}

.prose {
	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	p,
	li,
	ul,
	ol,
	dl,
	tablet,
	figure,
	pre {
		&:last-child {
			margin-bottom: 0;
		}
	}
}

/*  Comment */
.hljs-meta,
.hljs-comment {
	color: theme(colors.slate.400);
}

/* Red */
/*INFO: This keyword, HTML elements, Regex group symbol, CSS units, Terminal Red */
.hljs-tag,
.hljs-doctag,
.hljs-selector-id,
.hljs-selector-class,
.hljs-regexp,
.hljs-template-tag,
.hljs-selector-pseudo,
.hljs-selector-attr,
.hljs-variable.language_,
.hljs-name,
.hljs-deletion {
	color: theme(colors.primary.400);
}

/*Orange */
/*INFO: Number and Boolean constants, Language support constants */
.hljs-variable,
.hljs-template-variable,
.hljs-number,
.hljs-literal,
.hljs-type,
.hljs-params,
.hljs-link {
	color: theme(colors.primary.400);
}

/*  Yellow */
/* INFO:  	Function parameters, Regex character sets, Terminal Yellow */
.hljs-built_in,
.hljs-attribute {
	color: theme(colors.warning.400);
}
/* cyan */
/* INFO: Language support functions, CSS HTML elements */
.hljs-selector-tag {
	color: theme(colors.primary.400);
}

/* light blue */
/* INFO: Object properties, Regex quantifiers and flags, Markdown headings, Terminal Cyan, Markdown code, Import/export keywords */
.hljs-keyword,
.hljs-title.function_,
.hljs-title,
.hljs-title.class_,
.hljs-title.class_.inherited__,
.hljs-subst,
.hljs-property {
	color: theme(colors.warning.400);
}

/*Green*/
/* INFO: Object literal keys, Markdown links, Terminal Green */
.hljs-selector-tag {
	color: theme(colors.accent.400);
}

/*Green(er) */
/* INFO: Strings, CSS class names */
.hljs-quote,
.hljs-string,
.hljs-symbol,
.hljs-bullet,
.hljs-addition {
	color: theme(colors.warning.400);
}

/* Blue */
/* INFO:  	Function names, CSS property names, Terminal Blue */
.hljs-code,
.hljs-formula,
.hljs-section {
	color: #7aa2f7;
}

/* Magenta */
/*INFO: Control Keywords, Storage Types, Regex symbols and operators, HTML Attributes, Terminal Magenta */

.hljs-keyword,
.hljs-operator,
.hljs-keyword,
.hljs-char.escape_,
.hljs-attr {
	color: theme(colors.success.400);
}

/* white*/
/* INFO: Variables, Class names, Terminal White */
.hljs-punctuation {
	color: theme(colors.slate.200);
}

/* .hljs {
	background: theme(colors.slate.800);
	color: theme(colors.slate.200);
} */

.hljs-emphasis {
	font-style: italic;
}

.hljs-strong {
	font-weight: bold;
}

/* override styles when printing */
@media print {
	@page {
		size: auto; /* auto is the initial value */

		/* this affects the margin in the printer settings */
		margin: 12.7mm 12.7mm 12.7mm 12.7mm;
	}
	:root {
		--container-width: 7.5in !important;
		--section-spacing: 0.25in;
	}

	html {
		background-color: #fff !important;
	}
	body {
		margin: 0;
		background-color: #fff !important;
	}
}
